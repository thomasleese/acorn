import 'base'

def malloc(size as Integer) as UnsafePointer{Integer8}
    let pointer = ccall malloc(Integer) as UnsafePointer{Integer8} using size
    return pointer
end

def free(pointer as UnsafePointer{Integer8}) as Void
    ccall free(UnsafePointer{Integer8}) as Void using pointer
end

def create_integer_array(capacity as Integer) as Array{Integer}
    let block_size = capacity * strideof Integer
    let elements = malloc(block_size) as UnsafePointer{Integer}
    return new Array{Integer}(elements: elements, size: 0, capacity: capacity)
end

let array = create_integer_array(10)
